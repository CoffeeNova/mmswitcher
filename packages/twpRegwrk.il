
//  Microsoft (R) .NET Framework IL Disassembler.  Version 4.0.30319.33440
//  Copyright (c) Microsoft Corporation.  All rights reserved.



// Metadata version: v4.0.30319
.assembly extern mscorlib
{
  .publickeytoken = (B7 7A 5C 56 19 34 E0 89 )                         // .z\V.4..
  .ver 4:0:0:0
}
.assembly extern System.Core
{
  .publickeytoken = (B7 7A 5C 56 19 34 E0 89 )                         // .z\V.4..
  .ver 4:0:0:0
}
.assembly twpRegwrk
{
  .custom instance void [mscorlib]System.Runtime.Versioning.TargetFrameworkAttribute::.ctor(string) = ( 01 00 1A 2E 4E 45 54 46 72 61 6D 65 77 6F 72 6B   // ....NETFramework
                                                                                                        2C 56 65 72 73 69 6F 6E 3D 76 34 2E 30 01 00 54   // ,Version=v4.0..T
                                                                                                        0E 14 46 72 61 6D 65 77 6F 72 6B 44 69 73 70 6C   // ..FrameworkDispl
                                                                                                        61 79 4E 61 6D 65 10 2E 4E 45 54 20 46 72 61 6D   // ayName..NET Fram
                                                                                                        65 77 6F 72 6B 20 34 )                            // ework 4
  .custom instance void [mscorlib]System.Reflection.AssemblyFileVersionAttribute::.ctor(string) = ( 01 00 08 31 2E 37 2E 31 2E 33 33 00 00 )          // ...1.7.1.33..
  .custom instance void [mscorlib]System.Reflection.AssemblyTitleAttribute::.ctor(string) = ( 01 00 09 74 77 70 52 65 67 77 72 6B 00 00 )       // ...twpRegwrk..
  .custom instance void [mscorlib]System.Reflection.AssemblyDescriptionAttribute::.ctor(string) = ( 01 00 00 00 00 ) 
  .custom instance void [mscorlib]System.Reflection.AssemblyConfigurationAttribute::.ctor(string) = ( 01 00 00 00 00 ) 
  .custom instance void [mscorlib]System.Reflection.AssemblyCompanyAttribute::.ctor(string) = ( 01 00 00 00 00 ) 
  .custom instance void [mscorlib]System.Reflection.AssemblyProductAttribute::.ctor(string) = ( 01 00 09 74 77 70 52 65 67 77 72 6B 00 00 )       // ...twpRegwrk..
  .custom instance void [mscorlib]System.Reflection.AssemblyCopyrightAttribute::.ctor(string) = ( 01 00 1E 43 6F 66 66 65 65 4A 65 6C 6C 79 20 43   // ...CoffeeJelly C
                                                                                                  6F 70 79 72 69 67 68 74 20 C2 A9 20 20 32 30 31   // opyright ..  201
                                                                                                  36 00 00 )                                        // 6..
  .custom instance void [mscorlib]System.Reflection.AssemblyTrademarkAttribute::.ctor(string) = ( 01 00 00 00 00 ) 
  .custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = ( 01 00 01 00 00 ) 
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 37 64 64 62 66 31 34 35 2D 62 65 37 36   // ..$7ddbf145-be76
                                                                                                  2D 34 34 38 63 2D 62 37 62 32 2D 61 33 31 32 31   // -448c-b7b2-a3121
                                                                                                  32 38 65 63 35 61 32 00 00 )                      // 28ec5a2..
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilationRelaxationsAttribute::.ctor(int32) = ( 01 00 08 00 00 00 00 00 ) 
  .custom instance void [mscorlib]System.Runtime.CompilerServices.RuntimeCompatibilityAttribute::.ctor() = ( 01 00 01 00 54 02 16 57 72 61 70 4E 6F 6E 45 78   // ....T..WrapNonEx
                                                                                                             63 65 70 74 69 6F 6E 54 68 72 6F 77 73 01 )       // ceptionThrows.
  .publickey = (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00   // .$..............
                00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00   // .$..RSA1........
                D1 EF E2 8C 32 07 8E 62 4D B7 49 68 EE 44 D6 95   // ....2..bM.Ih.D..
                49 FC 52 C4 BA 43 48 70 0D AE 1E A1 C8 E5 82 23   // I.R..CHp.......#
                8F 53 EB A8 9F 8E A1 A9 B6 4F 96 C6 20 95 83 45   // .S.......O.. ..E
                5C 86 AC 93 49 EF E9 58 2C 40 C6 61 AA CE 7C 8F   // \...I..X,@.a..|.
                AB 85 02 77 2C 0A D0 E4 C1 EE B7 3E EC 85 E4 94   // ...w,......>....
                D8 F2 96 A6 4D 86 0E 17 F7 B9 AD 60 9D 18 44 9D   // ....M......`..D.
                CD 44 A3 A2 8E 29 34 14 6A 82 5A 22 8E 1A 1A 82   // .D...)4.j.Z"....
                F5 FE 0A 58 57 FF BC 8C BA D7 D6 57 C2 6A C7 B2 ) // ...XW......W.j..
  .hash algorithm 0x00008004
  .ver 1:7:0:0
}
.module twpRegwrk.dll
// MVID: {FCC934DC-9D2E-4FC9-95D1-88654E1172FC}
.imagebase 0x0000000180000000
.file alignment 0x00000200
.stackreserve 0x0000000000400000
.subsystem 0x0003       // WINDOWS_CUI
.corflags 0x00000009    //  ILONLY
// Image base: 0x00A50000


// =============== CLASS MEMBERS DECLARATION ===================

.class public auto ansi beforefieldinit NWTweak.RegistryWorker
       extends [mscorlib]System.Object
{
  .method public hidebysig static bool  DeleteKey(valuetype [mscorlib]Microsoft.Win32.RegistryHive rootKey,
                                                  string keyLocation,
                                                  string valueName) cil managed
  {
    // Code size       143 (0x8f)
    .maxstack  3
    .locals init (bool V_0,
             class [mscorlib]Microsoft.Win32.RegistryKey V_1,
             class [mscorlib]Microsoft.Win32.RegistryKey V_2,
             bool V_3,
             bool V_4)
    IL_0000:  nop
    IL_0001:  ldc.i4.0
    IL_0002:  stloc.0
    IL_0003:  ldc.i4     0x80000002
    IL_0008:  call       bool [mscorlib]System.Environment::get_Is64BitOperatingSystem()
    IL_000d:  brtrue.s   IL_0016

    IL_000f:  ldc.i4     0x200
    IL_0014:  br.s       IL_001b

    IL_0016:  ldc.i4     0x100
    IL_001b:  nop
    IL_001c:  call       class [mscorlib]Microsoft.Win32.RegistryKey [mscorlib]Microsoft.Win32.RegistryKey::OpenBaseKey(valuetype [mscorlib]Microsoft.Win32.RegistryHive,
                                                                                                                        valuetype [mscorlib]Microsoft.Win32.RegistryView)
    IL_0021:  stloc.1
    .try
    {
      IL_0022:  nop
      IL_0023:  ldloc.1
      IL_0024:  ldarg.1
      IL_0025:  ldc.i4.2
      IL_0026:  callvirt   instance class [mscorlib]Microsoft.Win32.RegistryKey [mscorlib]Microsoft.Win32.RegistryKey::OpenSubKey(string,
                                                                                                                                  valuetype [mscorlib]Microsoft.Win32.RegistryKeyPermissionCheck)
      IL_002b:  stloc.2
      .try
      {
        IL_002c:  nop
        IL_002d:  ldloc.2
        IL_002e:  ldnull
        IL_002f:  ceq
        IL_0031:  stloc.s    V_4
        IL_0033:  ldloc.s    V_4
        IL_0035:  brtrue.s   IL_0045

        IL_0037:  nop
        IL_0038:  ldloc.2
        IL_0039:  ldarg.2
        IL_003a:  callvirt   instance void [mscorlib]Microsoft.Win32.RegistryKey::DeleteValue(string)
        IL_003f:  nop
        IL_0040:  ldc.i4.1
        IL_0041:  stloc.0
        IL_0042:  nop
        IL_0043:  br.s       IL_0056

        IL_0045:  ldstr      bytearray (1D 04 35 04 20 00 3D 04 30 04 39 04 34 04 35 04   // ..5. .=.0.9.4.5.
                                        3D 04 20 00 3A 04 3B 04 4E 04 47 04 20 00 )       // =. .:.;.N.G. .
        IL_004a:  ldarg.1
        IL_004b:  call       string [mscorlib]System.String::Concat(string,
                                                                    string)
        IL_0050:  newobj     instance void [mscorlib]System.IO.IOException::.ctor(string)
        IL_0055:  throw

        IL_0056:  ldloc.2
        IL_0057:  callvirt   instance void [mscorlib]Microsoft.Win32.RegistryKey::Close()
        IL_005c:  nop
        IL_005d:  nop
        IL_005e:  leave.s    IL_0072

      }  // end .try
      finally
      {
        IL_0060:  ldloc.2
        IL_0061:  ldnull
        IL_0062:  ceq
        IL_0064:  stloc.s    V_4
        IL_0066:  ldloc.s    V_4
        IL_0068:  brtrue.s   IL_0071

        IL_006a:  ldloc.2
        IL_006b:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
        IL_0070:  nop
        IL_0071:  endfinally
      }  // end handler
      IL_0072:  nop
      IL_0073:  nop
      IL_0074:  leave.s    IL_0088

    }  // end .try
    finally
    {
      IL_0076:  ldloc.1
      IL_0077:  ldnull
      IL_0078:  ceq
      IL_007a:  stloc.s    V_4
      IL_007c:  ldloc.s    V_4
      IL_007e:  brtrue.s   IL_0087

      IL_0080:  ldloc.1
      IL_0081:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0086:  nop
      IL_0087:  endfinally
    }  // end handler
    IL_0088:  nop
    IL_0089:  ldloc.0
    IL_008a:  stloc.3
    IL_008b:  br.s       IL_008d

    IL_008d:  ldloc.3
    IL_008e:  ret
  } // end of method RegistryWorker::DeleteKey

  .method public hidebysig static string 
          FindSubKey(valuetype [mscorlib]Microsoft.Win32.RegistryHive rootKey,
                     string subKeyLocation,
                     string valueName) cil managed
  {
    // Code size       225 (0xe1)
    .maxstack  4
    .locals init (string[] V_0,
             string V_1,
             string[] V_2,
             class [mscorlib]Microsoft.Win32.RegistryKey V_3,
             int32 V_4,
             class [mscorlib]Microsoft.Win32.RegistryKey V_5,
             int32 V_6,
             string V_7,
             bool V_8)
    IL_0000:  nop
    IL_0001:  ldstr      ""
    IL_0006:  stloc.1
    IL_0007:  ldarg.0
    IL_0008:  call       bool [mscorlib]System.Environment::get_Is64BitOperatingSystem()
    IL_000d:  brtrue.s   IL_0016

    IL_000f:  ldc.i4     0x200
    IL_0014:  br.s       IL_001b

    IL_0016:  ldc.i4     0x100
    IL_001b:  nop
    IL_001c:  call       class [mscorlib]Microsoft.Win32.RegistryKey [mscorlib]Microsoft.Win32.RegistryKey::OpenBaseKey(valuetype [mscorlib]Microsoft.Win32.RegistryHive,
                                                                                                                        valuetype [mscorlib]Microsoft.Win32.RegistryView)
    IL_0021:  stloc.3
    IL_0022:  ldloc.3
    IL_0023:  ldarg.1
    IL_0024:  callvirt   instance class [mscorlib]Microsoft.Win32.RegistryKey [mscorlib]Microsoft.Win32.RegistryKey::OpenSubKey(string)
    IL_0029:  stloc.3
    IL_002a:  ldloc.3
    IL_002b:  ldnull
    IL_002c:  ceq
    IL_002e:  stloc.s    V_8
    IL_0030:  ldloc.s    V_8
    IL_0032:  brtrue     IL_00c6

    IL_0037:  nop
    IL_0038:  ldloc.3
    IL_0039:  callvirt   instance string[] [mscorlib]Microsoft.Win32.RegistryKey::GetSubKeyNames()
    IL_003e:  stloc.0
    IL_003f:  ldc.i4.0
    IL_0040:  stloc.s    V_4
    IL_0042:  br.s       IL_00b6

    IL_0044:  nop
    IL_0045:  ldloc.0
    IL_0046:  ldloc.s    V_4
    IL_0048:  ldelem.ref
    IL_0049:  stloc.1
    IL_004a:  ldsfld     class [mscorlib]Microsoft.Win32.RegistryKey [mscorlib]Microsoft.Win32.Registry::LocalMachine
    IL_004f:  ldarg.1
    IL_0050:  ldstr      "\\"
    IL_0055:  ldloc.1
    IL_0056:  call       string [mscorlib]System.String::Concat(string,
                                                                string,
                                                                string)
    IL_005b:  callvirt   instance class [mscorlib]Microsoft.Win32.RegistryKey [mscorlib]Microsoft.Win32.RegistryKey::OpenSubKey(string)
    IL_0060:  stloc.s    V_5
    IL_0062:  ldloc.s    V_5
    IL_0064:  callvirt   instance string[] [mscorlib]Microsoft.Win32.RegistryKey::GetValueNames()
    IL_0069:  stloc.2
    IL_006a:  ldc.i4.0
    IL_006b:  stloc.s    V_6
    IL_006d:  br.s       IL_009a

    IL_006f:  nop
    IL_0070:  ldloc.2
    IL_0071:  ldloc.s    V_6
    IL_0073:  ldelem.ref
    IL_0074:  ldarg.2
    IL_0075:  call       bool [mscorlib]System.String::op_Equality(string,
                                                                   string)
    IL_007a:  ldc.i4.0
    IL_007b:  ceq
    IL_007d:  stloc.s    V_8
    IL_007f:  ldloc.s    V_8
    IL_0081:  brtrue.s   IL_0091

    IL_0083:  nop
    IL_0084:  ldloc.s    V_5
    IL_0086:  callvirt   instance void [mscorlib]Microsoft.Win32.RegistryKey::Close()
    IL_008b:  nop
    IL_008c:  ldloc.1
    IL_008d:  stloc.s    V_7
    IL_008f:  br.s       IL_00de

    IL_0091:  nop
    IL_0092:  nop
    IL_0093:  nop
    IL_0094:  ldloc.s    V_6
    IL_0096:  ldc.i4.1
    IL_0097:  add
    IL_0098:  stloc.s    V_6
    IL_009a:  ldloc.s    V_6
    IL_009c:  ldloc.2
    IL_009d:  ldlen
    IL_009e:  conv.i4
    IL_009f:  clt
    IL_00a1:  stloc.s    V_8
    IL_00a3:  ldloc.s    V_8
    IL_00a5:  brtrue.s   IL_006f

    IL_00a7:  ldloc.s    V_5
    IL_00a9:  callvirt   instance void [mscorlib]Microsoft.Win32.RegistryKey::Close()
    IL_00ae:  nop
    IL_00af:  nop
    IL_00b0:  ldloc.s    V_4
    IL_00b2:  ldc.i4.1
    IL_00b3:  add
    IL_00b4:  stloc.s    V_4
    IL_00b6:  ldloc.s    V_4
    IL_00b8:  ldloc.0
    IL_00b9:  ldlen
    IL_00ba:  conv.i4
    IL_00bb:  clt
    IL_00bd:  stloc.s    V_8
    IL_00bf:  ldloc.s    V_8
    IL_00c1:  brtrue.s   IL_0044

    IL_00c3:  nop
    IL_00c4:  br.s       IL_00c8

    IL_00c6:  nop
    IL_00c7:  nop
    IL_00c8:  ldloc.3
    IL_00c9:  ldnull
    IL_00ca:  ceq
    IL_00cc:  stloc.s    V_8
    IL_00ce:  ldloc.s    V_8
    IL_00d0:  brtrue.s   IL_00d9

    IL_00d2:  ldloc.3
    IL_00d3:  callvirt   instance void [mscorlib]Microsoft.Win32.RegistryKey::Close()
    IL_00d8:  nop
    IL_00d9:  ldloc.1
    IL_00da:  stloc.s    V_7
    IL_00dc:  br.s       IL_00de

    IL_00de:  ldloc.s    V_7
    IL_00e0:  ret
  } // end of method RegistryWorker::FindSubKey

  .method public hidebysig instance class [mscorlib]System.Collections.Generic.List`1<string> 
          GetSubKeyNames(string path) cil managed
  {
    // Code size       40 (0x28)
    .maxstack  1
    .locals init (class [mscorlib]System.Collections.Generic.List`1<string> V_0,
             class [mscorlib]Microsoft.Win32.RegistryKey V_1,
             string[] V_2,
             class [mscorlib]System.Collections.Generic.List`1<string> V_3)
    IL_0000:  nop
    IL_0001:  newobj     instance void class [mscorlib]System.Collections.Generic.List`1<string>::.ctor()
    IL_0006:  stloc.0
    IL_0007:  ldsfld     class [mscorlib]Microsoft.Win32.RegistryKey [mscorlib]Microsoft.Win32.Registry::ClassesRoot
    IL_000c:  stloc.1
    IL_000d:  ldloc.1
    IL_000e:  callvirt   instance string[] [mscorlib]Microsoft.Win32.RegistryKey::GetSubKeyNames()
    IL_0013:  stloc.2
    IL_0014:  ldloc.2
    IL_0015:  call       class [mscorlib]System.Collections.Generic.List`1<!!0> [System.Core]System.Linq.Enumerable::ToList<string>(class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0>)
    IL_001a:  stloc.0
    IL_001b:  ldloc.1
    IL_001c:  callvirt   instance void [mscorlib]Microsoft.Win32.RegistryKey::Close()
    IL_0021:  nop
    IL_0022:  ldloc.0
    IL_0023:  stloc.3
    IL_0024:  br.s       IL_0026

    IL_0026:  ldloc.3
    IL_0027:  ret
  } // end of method RegistryWorker::GetSubKeyNames

  .method public hidebysig static class [mscorlib]System.Collections.Generic.List`1<valuetype [mscorlib]System.Collections.Generic.KeyValuePair`2<string,!!T>> 
          GetValuesFromKey<T>(valuetype [mscorlib]Microsoft.Win32.RegistryHive rootKey,
                              string keyLocation) cil managed
  {
    // Code size       241 (0xf1)
    .maxstack  4
    .locals init (class [mscorlib]System.Collections.Generic.List`1<valuetype [mscorlib]System.Collections.Generic.KeyValuePair`2<string,!!T>> V_0,
             class [mscorlib]Microsoft.Win32.RegistryKey V_1,
             class [mscorlib]Microsoft.Win32.RegistryKey V_2,
             string[] V_3,
             string V_4,
             class [mscorlib]System.Collections.Generic.List`1<valuetype [mscorlib]System.Collections.Generic.KeyValuePair`2<string,!!T>> V_5,
             bool V_6,
             string[] V_7,
             int32 V_8)
    IL_0000:  nop
    IL_0001:  newobj     instance void class [mscorlib]System.Collections.Generic.List`1<valuetype [mscorlib]System.Collections.Generic.KeyValuePair`2<string,!!T>>::.ctor()
    IL_0006:  stloc.0
    IL_0007:  ldarg.0
    IL_0008:  call       bool [mscorlib]System.Environment::get_Is64BitOperatingSystem()
    IL_000d:  brtrue.s   IL_0016

    IL_000f:  ldc.i4     0x200
    IL_0014:  br.s       IL_001b

    IL_0016:  ldc.i4     0x100
    IL_001b:  nop
    IL_001c:  call       class [mscorlib]Microsoft.Win32.RegistryKey [mscorlib]Microsoft.Win32.RegistryKey::OpenBaseKey(valuetype [mscorlib]Microsoft.Win32.RegistryHive,
                                                                                                                        valuetype [mscorlib]Microsoft.Win32.RegistryView)
    IL_0021:  stloc.1
    .try
    {
      IL_0022:  nop
      IL_0023:  ldloc.1
      IL_0024:  ldarg.1
      IL_0025:  callvirt   instance class [mscorlib]Microsoft.Win32.RegistryKey [mscorlib]Microsoft.Win32.RegistryKey::OpenSubKey(string)
      IL_002a:  stloc.2
      .try
      {
        IL_002b:  nop
        IL_002c:  ldloc.2
        IL_002d:  ldnull
        IL_002e:  ceq
        IL_0030:  stloc.s    V_6
        IL_0032:  ldloc.s    V_6
        IL_0034:  brtrue.s   IL_009e

        IL_0036:  nop
        IL_0037:  ldloc.2
        IL_0038:  callvirt   instance string[] [mscorlib]Microsoft.Win32.RegistryKey::GetValueNames()
        IL_003d:  stloc.3
        IL_003e:  ldloc.3
        IL_003f:  call       int32 [System.Core]System.Linq.Enumerable::Count<string>(class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0>)
        IL_0044:  ldc.i4.0
        IL_0045:  cgt
        IL_0047:  ldc.i4.0
        IL_0048:  ceq
        IL_004a:  stloc.s    V_6
        IL_004c:  ldloc.s    V_6
        IL_004e:  brtrue.s   IL_009b

        IL_0050:  nop
        IL_0051:  ldloc.3
        IL_0052:  stloc.s    V_7
        IL_0054:  ldc.i4.0
        IL_0055:  stloc.s    V_8
        IL_0057:  br.s       IL_008d

        IL_0059:  ldloc.s    V_7
        IL_005b:  ldloc.s    V_8
        IL_005d:  ldelem.ref
        IL_005e:  stloc.s    V_4
        IL_0060:  nop
        .try
        {
          IL_0061:  nop
          IL_0062:  ldloc.0
          IL_0063:  ldloc.s    V_4
          IL_0065:  ldloc.2
          IL_0066:  ldloc.s    V_4
          IL_0068:  callvirt   instance object [mscorlib]Microsoft.Win32.RegistryKey::GetValue(string)
          IL_006d:  unbox.any  !!T
          IL_0072:  newobj     instance void valuetype [mscorlib]System.Collections.Generic.KeyValuePair`2<string,!!T>::.ctor(!0,
                                                                                                                              !1)
          IL_0077:  callvirt   instance void class [mscorlib]System.Collections.Generic.List`1<valuetype [mscorlib]System.Collections.Generic.KeyValuePair`2<string,!!T>>::Add(!0)
          IL_007c:  nop
          IL_007d:  nop
          IL_007e:  leave.s    IL_0085

        }  // end .try
        catch [mscorlib]System.Object 
        {
          IL_0080:  pop
          IL_0081:  nop
          IL_0082:  nop
          IL_0083:  leave.s    IL_0085

        }  // end handler
        IL_0085:  nop
        IL_0086:  nop
        IL_0087:  ldloc.s    V_8
        IL_0089:  ldc.i4.1
        IL_008a:  add
        IL_008b:  stloc.s    V_8
        IL_008d:  ldloc.s    V_8
        IL_008f:  ldloc.s    V_7
        IL_0091:  ldlen
        IL_0092:  conv.i4
        IL_0093:  clt
        IL_0095:  stloc.s    V_6
        IL_0097:  ldloc.s    V_6
        IL_0099:  brtrue.s   IL_0059

        IL_009b:  nop
        IL_009c:  br.s       IL_00af

        IL_009e:  ldstr      bytearray (1D 04 35 04 20 00 3D 04 30 04 39 04 34 04 35 04   // ..5. .=.0.9.4.5.
                                        3D 04 20 00 3A 04 3B 04 4E 04 47 04 20 00 )       // =. .:.;.N.G. .
        IL_00a3:  ldarg.1
        IL_00a4:  call       string [mscorlib]System.String::Concat(string,
                                                                    string)
        IL_00a9:  newobj     instance void [mscorlib]System.IO.IOException::.ctor(string)
        IL_00ae:  throw

        IL_00af:  ldloc.2
        IL_00b0:  callvirt   instance void [mscorlib]Microsoft.Win32.RegistryKey::Close()
        IL_00b5:  nop
        IL_00b6:  nop
        IL_00b7:  leave.s    IL_00cb

      }  // end .try
      finally
      {
        IL_00b9:  ldloc.2
        IL_00ba:  ldnull
        IL_00bb:  ceq
        IL_00bd:  stloc.s    V_6
        IL_00bf:  ldloc.s    V_6
        IL_00c1:  brtrue.s   IL_00ca

        IL_00c3:  ldloc.2
        IL_00c4:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
        IL_00c9:  nop
        IL_00ca:  endfinally
      }  // end handler
      IL_00cb:  nop
      IL_00cc:  ldloc.1
      IL_00cd:  callvirt   instance void [mscorlib]Microsoft.Win32.RegistryKey::Close()
      IL_00d2:  nop
      IL_00d3:  nop
      IL_00d4:  leave.s    IL_00e8

    }  // end .try
    finally
    {
      IL_00d6:  ldloc.1
      IL_00d7:  ldnull
      IL_00d8:  ceq
      IL_00da:  stloc.s    V_6
      IL_00dc:  ldloc.s    V_6
      IL_00de:  brtrue.s   IL_00e7

      IL_00e0:  ldloc.1
      IL_00e1:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_00e6:  nop
      IL_00e7:  endfinally
    }  // end handler
    IL_00e8:  nop
    IL_00e9:  ldloc.0
    IL_00ea:  stloc.s    V_5
    IL_00ec:  br.s       IL_00ee

    IL_00ee:  ldloc.s    V_5
    IL_00f0:  ret
  } // end of method RegistryWorker::GetValuesFromKey

  .method public hidebysig static class [mscorlib]System.Collections.Generic.List`1<string> 
          GetSubKeyNames(valuetype [mscorlib]Microsoft.Win32.RegistryHive rootKey,
                         string keyLocation) cil managed
  {
    // Code size       149 (0x95)
    .maxstack  2
    .locals init (class [mscorlib]System.Collections.Generic.List`1<string> V_0,
             class [mscorlib]Microsoft.Win32.RegistryKey V_1,
             class [mscorlib]Microsoft.Win32.RegistryKey V_2,
             class [mscorlib]System.Collections.Generic.List`1<string> V_3,
             bool V_4)
    IL_0000:  nop
    IL_0001:  newobj     instance void class [mscorlib]System.Collections.Generic.List`1<string>::.ctor()
    IL_0006:  stloc.0
    IL_0007:  ldarg.0
    IL_0008:  call       bool [mscorlib]System.Environment::get_Is64BitOperatingSystem()
    IL_000d:  brtrue.s   IL_0016

    IL_000f:  ldc.i4     0x200
    IL_0014:  br.s       IL_001b

    IL_0016:  ldc.i4     0x100
    IL_001b:  nop
    IL_001c:  call       class [mscorlib]Microsoft.Win32.RegistryKey [mscorlib]Microsoft.Win32.RegistryKey::OpenBaseKey(valuetype [mscorlib]Microsoft.Win32.RegistryHive,
                                                                                                                        valuetype [mscorlib]Microsoft.Win32.RegistryView)
    IL_0021:  stloc.1
    .try
    {
      IL_0022:  nop
      IL_0023:  ldloc.1
      IL_0024:  ldarg.1
      IL_0025:  callvirt   instance class [mscorlib]Microsoft.Win32.RegistryKey [mscorlib]Microsoft.Win32.RegistryKey::OpenSubKey(string)
      IL_002a:  stloc.2
      .try
      {
        IL_002b:  nop
        IL_002c:  ldloc.2
        IL_002d:  ldnull
        IL_002e:  ceq
        IL_0030:  stloc.s    V_4
        IL_0032:  ldloc.s    V_4
        IL_0034:  brtrue.s   IL_0044

        IL_0036:  ldloc.2
        IL_0037:  callvirt   instance string[] [mscorlib]Microsoft.Win32.RegistryKey::GetSubKeyNames()
        IL_003c:  call       class [mscorlib]System.Collections.Generic.List`1<!!0> [System.Core]System.Linq.Enumerable::ToList<string>(class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0>)
        IL_0041:  stloc.0
        IL_0042:  br.s       IL_0055

        IL_0044:  ldstr      bytearray (1D 04 35 04 20 00 3D 04 30 04 39 04 34 04 35 04   // ..5. .=.0.9.4.5.
                                        3D 04 20 00 3A 04 3B 04 4E 04 47 04 20 00 )       // =. .:.;.N.G. .
        IL_0049:  ldarg.1
        IL_004a:  call       string [mscorlib]System.String::Concat(string,
                                                                    string)
        IL_004f:  newobj     instance void [mscorlib]System.IO.IOException::.ctor(string)
        IL_0054:  throw

        IL_0055:  ldloc.2
        IL_0056:  callvirt   instance void [mscorlib]Microsoft.Win32.RegistryKey::Close()
        IL_005b:  nop
        IL_005c:  nop
        IL_005d:  leave.s    IL_0071

      }  // end .try
      finally
      {
        IL_005f:  ldloc.2
        IL_0060:  ldnull
        IL_0061:  ceq
        IL_0063:  stloc.s    V_4
        IL_0065:  ldloc.s    V_4
        IL_0067:  brtrue.s   IL_0070

        IL_0069:  ldloc.2
        IL_006a:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
        IL_006f:  nop
        IL_0070:  endfinally
      }  // end handler
      IL_0071:  nop
      IL_0072:  ldloc.1
      IL_0073:  callvirt   instance void [mscorlib]Microsoft.Win32.RegistryKey::Close()
      IL_0078:  nop
      IL_0079:  nop
      IL_007a:  leave.s    IL_008e

    }  // end .try
    finally
    {
      IL_007c:  ldloc.1
      IL_007d:  ldnull
      IL_007e:  ceq
      IL_0080:  stloc.s    V_4
      IL_0082:  ldloc.s    V_4
      IL_0084:  brtrue.s   IL_008d

      IL_0086:  ldloc.1
      IL_0087:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_008c:  nop
      IL_008d:  endfinally
    }  // end handler
    IL_008e:  nop
    IL_008f:  ldloc.0
    IL_0090:  stloc.3
    IL_0091:  br.s       IL_0093

    IL_0093:  ldloc.3
    IL_0094:  ret
  } // end of method RegistryWorker::GetSubKeyNames

  .method public hidebysig static !!T  GetKeyValue<T>(valuetype [mscorlib]Microsoft.Win32.RegistryHive rootKey,
                                                      string keyLocation,
                                                      string valueName) cil managed
  {
    // Code size       137 (0x89)
    .maxstack  2
    .locals init (!!T V_0,
             class [mscorlib]Microsoft.Win32.RegistryKey V_1,
             class [mscorlib]Microsoft.Win32.RegistryKey V_2,
             !!T V_3,
             bool V_4)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  call       bool [mscorlib]System.Environment::get_Is64BitOperatingSystem()
    IL_0007:  brtrue.s   IL_0010

    IL_0009:  ldc.i4     0x200
    IL_000e:  br.s       IL_0015

    IL_0010:  ldc.i4     0x100
    IL_0015:  nop
    IL_0016:  call       class [mscorlib]Microsoft.Win32.RegistryKey [mscorlib]Microsoft.Win32.RegistryKey::OpenBaseKey(valuetype [mscorlib]Microsoft.Win32.RegistryHive,
                                                                                                                        valuetype [mscorlib]Microsoft.Win32.RegistryView)
    IL_001b:  stloc.1
    .try
    {
      IL_001c:  nop
      IL_001d:  ldloc.1
      IL_001e:  ldarg.1
      IL_001f:  callvirt   instance class [mscorlib]Microsoft.Win32.RegistryKey [mscorlib]Microsoft.Win32.RegistryKey::OpenSubKey(string)
      IL_0024:  stloc.2
      .try
      {
        IL_0025:  nop
        IL_0026:  ldloc.2
        IL_0027:  ldnull
        IL_0028:  ceq
        IL_002a:  stloc.s    V_4
        IL_002c:  ldloc.s    V_4
        IL_002e:  brtrue.s   IL_003f

        IL_0030:  ldloc.2
        IL_0031:  ldarg.2
        IL_0032:  callvirt   instance object [mscorlib]Microsoft.Win32.RegistryKey::GetValue(string)
        IL_0037:  unbox.any  !!T
        IL_003c:  stloc.0
        IL_003d:  br.s       IL_0050

        IL_003f:  ldstr      bytearray (1D 04 35 04 20 00 3D 04 30 04 39 04 34 04 35 04   // ..5. .=.0.9.4.5.
                                        3D 04 20 00 3A 04 3B 04 4E 04 47 04 20 00 )       // =. .:.;.N.G. .
        IL_0044:  ldarg.1
        IL_0045:  call       string [mscorlib]System.String::Concat(string,
                                                                    string)
        IL_004a:  newobj     instance void [mscorlib]System.IO.IOException::.ctor(string)
        IL_004f:  throw

        IL_0050:  ldloc.2
        IL_0051:  callvirt   instance void [mscorlib]Microsoft.Win32.RegistryKey::Close()
        IL_0056:  nop
        IL_0057:  nop
        IL_0058:  leave.s    IL_006c

      }  // end .try
      finally
      {
        IL_005a:  ldloc.2
        IL_005b:  ldnull
        IL_005c:  ceq
        IL_005e:  stloc.s    V_4
        IL_0060:  ldloc.s    V_4
        IL_0062:  brtrue.s   IL_006b

        IL_0064:  ldloc.2
        IL_0065:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
        IL_006a:  nop
        IL_006b:  endfinally
      }  // end handler
      IL_006c:  nop
      IL_006d:  nop
      IL_006e:  leave.s    IL_0082

    }  // end .try
    finally
    {
      IL_0070:  ldloc.1
      IL_0071:  ldnull
      IL_0072:  ceq
      IL_0074:  stloc.s    V_4
      IL_0076:  ldloc.s    V_4
      IL_0078:  brtrue.s   IL_0081

      IL_007a:  ldloc.1
      IL_007b:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0080:  nop
      IL_0081:  endfinally
    }  // end handler
    IL_0082:  nop
    IL_0083:  ldloc.0
    IL_0084:  stloc.3
    IL_0085:  br.s       IL_0087

    IL_0087:  ldloc.3
    IL_0088:  ret
  } // end of method RegistryWorker::GetKeyValue

  .method public hidebysig static void  WriteKeyValue(valuetype [mscorlib]Microsoft.Win32.RegistryHive rootKey,
                                                      string keyLocation,
                                                      valuetype [mscorlib]Microsoft.Win32.RegistryValueKind valueKind,
                                                      string valueName,
                                                      object 'value') cil managed
  {
    // Code size       164 (0xa4)
    .maxstack  4
    .locals init (class [mscorlib]Microsoft.Win32.RegistryKey V_0,
             class [mscorlib]Microsoft.Win32.RegistryKey V_1,
             class [mscorlib]System.Exception V_2,
             bool V_3)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  call       bool [mscorlib]System.Environment::get_Is64BitOperatingSystem()
    IL_0007:  brtrue.s   IL_0010

    IL_0009:  ldc.i4     0x200
    IL_000e:  br.s       IL_0015

    IL_0010:  ldc.i4     0x100
    IL_0015:  nop
    IL_0016:  call       class [mscorlib]Microsoft.Win32.RegistryKey [mscorlib]Microsoft.Win32.RegistryKey::OpenBaseKey(valuetype [mscorlib]Microsoft.Win32.RegistryHive,
                                                                                                                        valuetype [mscorlib]Microsoft.Win32.RegistryView)
    IL_001b:  stloc.0
    .try
    {
      IL_001c:  nop
      .try
      {
        IL_001d:  nop
        IL_001e:  ldloc.0
        IL_001f:  ldarg.1
        IL_0020:  ldc.i4.2
        IL_0021:  callvirt   instance class [mscorlib]Microsoft.Win32.RegistryKey [mscorlib]Microsoft.Win32.RegistryKey::CreateSubKey(string,
                                                                                                                                      valuetype [mscorlib]Microsoft.Win32.RegistryKeyPermissionCheck)
        IL_0026:  stloc.1
        .try
        {
          IL_0027:  nop
          IL_0028:  ldloc.1
          IL_0029:  ldnull
          IL_002a:  ceq
          IL_002c:  ldc.i4.0
          IL_002d:  ceq
          IL_002f:  stloc.3
          IL_0030:  ldloc.3
          IL_0031:  brtrue.s   IL_0044

          IL_0033:  ldstr      bytearray (1D 04 35 04 20 00 3D 04 30 04 39 04 34 04 35 04   // ..5. .=.0.9.4.5.
                                          3D 04 20 00 3A 04 3B 04 4E 04 47 04 20 00 )       // =. .:.;.N.G. .
          IL_0038:  ldarg.1
          IL_0039:  call       string [mscorlib]System.String::Concat(string,
                                                                      string)
          IL_003e:  newobj     instance void [mscorlib]System.InvalidOperationException::.ctor(string)
          IL_0043:  throw

          IL_0044:  ldloc.1
          IL_0045:  ldarg.3
          IL_0046:  ldarg.s    'value'
          IL_0048:  ldarg.2
          IL_0049:  callvirt   instance void [mscorlib]Microsoft.Win32.RegistryKey::SetValue(string,
                                                                                             object,
                                                                                             valuetype [mscorlib]Microsoft.Win32.RegistryValueKind)
          IL_004e:  nop
          IL_004f:  ldloc.1
          IL_0050:  callvirt   instance void [mscorlib]Microsoft.Win32.RegistryKey::Close()
          IL_0055:  nop
          IL_0056:  nop
          IL_0057:  leave.s    IL_0069

        }  // end .try
        finally
        {
          IL_0059:  ldloc.1
          IL_005a:  ldnull
          IL_005b:  ceq
          IL_005d:  stloc.3
          IL_005e:  ldloc.3
          IL_005f:  brtrue.s   IL_0068

          IL_0061:  ldloc.1
          IL_0062:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
          IL_0067:  nop
          IL_0068:  endfinally
        }  // end handler
        IL_0069:  nop
        IL_006a:  nop
        IL_006b:  leave.s    IL_0087

      }  // end .try
      catch [mscorlib]System.Exception 
      {
        IL_006d:  stloc.2
        IL_006e:  nop
        IL_006f:  ldstr      "It wasn't succeeded to write a value to the regist"
        + "er "
        IL_0074:  ldarg.1
        IL_0075:  ldstr      "\\"
        IL_007a:  ldarg.3
        IL_007b:  call       string [mscorlib]System.String::Concat(string,
                                                                    string,
                                                                    string,
                                                                    string)
        IL_0080:  ldloc.2
        IL_0081:  newobj     instance void [mscorlib]System.InvalidOperationException::.ctor(string,
                                                                                             class [mscorlib]System.Exception)
        IL_0086:  throw

      }  // end handler
      IL_0087:  nop
      IL_0088:  ldloc.0
      IL_0089:  callvirt   instance void [mscorlib]Microsoft.Win32.RegistryKey::Close()
      IL_008e:  nop
      IL_008f:  nop
      IL_0090:  leave.s    IL_00a2

    }  // end .try
    finally
    {
      IL_0092:  ldloc.0
      IL_0093:  ldnull
      IL_0094:  ceq
      IL_0096:  stloc.3
      IL_0097:  ldloc.3
      IL_0098:  brtrue.s   IL_00a1

      IL_009a:  ldloc.0
      IL_009b:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_00a0:  nop
      IL_00a1:  endfinally
    }  // end handler
    IL_00a2:  nop
    IL_00a3:  ret
  } // end of method RegistryWorker::WriteKeyValue

  .method public hidebysig static bool  CreateSubKey(valuetype [mscorlib]Microsoft.Win32.RegistryHive rootKey,
                                                     string subKey) cil managed
  {
    // Code size       74 (0x4a)
    .maxstack  2
    .locals init (bool V_0,
             class [mscorlib]Microsoft.Win32.RegistryKey V_1,
             bool V_2,
             bool V_3)
    IL_0000:  nop
    IL_0001:  ldc.i4.0
    IL_0002:  stloc.0
    IL_0003:  ldarg.0
    IL_0004:  call       bool [mscorlib]System.Environment::get_Is64BitOperatingSystem()
    IL_0009:  brtrue.s   IL_0012

    IL_000b:  ldc.i4     0x200
    IL_0010:  br.s       IL_0017

    IL_0012:  ldc.i4     0x100
    IL_0017:  nop
    IL_0018:  call       class [mscorlib]Microsoft.Win32.RegistryKey [mscorlib]Microsoft.Win32.RegistryKey::OpenBaseKey(valuetype [mscorlib]Microsoft.Win32.RegistryHive,
                                                                                                                        valuetype [mscorlib]Microsoft.Win32.RegistryView)
    IL_001d:  stloc.1
    .try
    {
      IL_001e:  nop
      IL_001f:  ldloc.1
      IL_0020:  ldarg.1
      IL_0021:  callvirt   instance class [mscorlib]Microsoft.Win32.RegistryKey [mscorlib]Microsoft.Win32.RegistryKey::CreateSubKey(string)
      IL_0026:  pop
      IL_0027:  ldc.i4.1
      IL_0028:  stloc.0
      IL_0029:  ldloc.1
      IL_002a:  callvirt   instance void [mscorlib]Microsoft.Win32.RegistryKey::Close()
      IL_002f:  nop
      IL_0030:  nop
      IL_0031:  leave.s    IL_0043

    }  // end .try
    finally
    {
      IL_0033:  ldloc.1
      IL_0034:  ldnull
      IL_0035:  ceq
      IL_0037:  stloc.3
      IL_0038:  ldloc.3
      IL_0039:  brtrue.s   IL_0042

      IL_003b:  ldloc.1
      IL_003c:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0041:  nop
      IL_0042:  endfinally
    }  // end handler
    IL_0043:  nop
    IL_0044:  ldloc.0
    IL_0045:  stloc.2
    IL_0046:  br.s       IL_0048

    IL_0048:  ldloc.2
    IL_0049:  ret
  } // end of method RegistryWorker::CreateSubKey

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ret
  } // end of method RegistryWorker::.ctor

} // end of class NWTweak.RegistryWorker

.class public auto ansi beforefieldinit NWTweak.RegistryHelpers
       extends [mscorlib]System.Object
{
  .method public hidebysig static class [mscorlib]Microsoft.Win32.RegistryKey 
          GetRegistryKey(string keyPath) cil managed
  {
    // Code size       56 (0x38)
    .maxstack  2
    .locals init (class [mscorlib]Microsoft.Win32.RegistryKey V_0,
             class [mscorlib]Microsoft.Win32.RegistryKey V_1)
    IL_0000:  nop
    IL_0001:  ldc.i4     0x80000002
    IL_0006:  call       bool [mscorlib]System.Environment::get_Is64BitOperatingSystem()
    IL_000b:  brtrue.s   IL_0014

    IL_000d:  ldc.i4     0x200
    IL_0012:  br.s       IL_0019

    IL_0014:  ldc.i4     0x100
    IL_0019:  nop
    IL_001a:  call       class [mscorlib]Microsoft.Win32.RegistryKey [mscorlib]Microsoft.Win32.RegistryKey::OpenBaseKey(valuetype [mscorlib]Microsoft.Win32.RegistryHive,
                                                                                                                        valuetype [mscorlib]Microsoft.Win32.RegistryView)
    IL_001f:  stloc.0
    IL_0020:  ldarg.0
    IL_0021:  call       bool [mscorlib]System.String::IsNullOrEmpty(string)
    IL_0026:  brtrue.s   IL_0031

    IL_0028:  ldloc.0
    IL_0029:  ldarg.0
    IL_002a:  callvirt   instance class [mscorlib]Microsoft.Win32.RegistryKey [mscorlib]Microsoft.Win32.RegistryKey::OpenSubKey(string)
    IL_002f:  br.s       IL_0032

    IL_0031:  ldloc.0
    IL_0032:  nop
    IL_0033:  stloc.1
    IL_0034:  br.s       IL_0036

    IL_0036:  ldloc.1
    IL_0037:  ret
  } // end of method RegistryHelpers::GetRegistryKey

  .method public hidebysig static object 
          GetRegistryValue(string keyPath,
                           string keyName) cil managed
  {
    // Code size       20 (0x14)
    .maxstack  2
    .locals init (class [mscorlib]Microsoft.Win32.RegistryKey V_0,
             object V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  call       class [mscorlib]Microsoft.Win32.RegistryKey NWTweak.RegistryHelpers::GetRegistryKey(string)
    IL_0007:  stloc.0
    IL_0008:  ldloc.0
    IL_0009:  ldarg.1
    IL_000a:  callvirt   instance object [mscorlib]Microsoft.Win32.RegistryKey::GetValue(string)
    IL_000f:  stloc.1
    IL_0010:  br.s       IL_0012

    IL_0012:  ldloc.1
    IL_0013:  ret
  } // end of method RegistryHelpers::GetRegistryValue

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ret
  } // end of method RegistryHelpers::.ctor

} // end of class NWTweak.RegistryHelpers


// =============================================================

// *********** DISASSEMBLY COMPLETE ***********************
// WARNING: Created Win32 resource file E:\Visual Studio Projects\twpRegwrk\twpRegwrk\bin\Release64\MSIL\twpRegwrk.res
